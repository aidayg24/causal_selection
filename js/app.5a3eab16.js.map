{"version":3,"file":"js/app.5a3eab16.js","mappings":"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","sources":["webpack://thesis-experiment/./src/App.vue?76f7","webpack://thesis-experiment/./src/Ex1TrialsConjunctive.js","webpack://thesis-experiment/./src/Ex1TrialsDisjunctive.js","webpack://thesis-experiment/./src/Ex2TrialsConjunctive.js","webpack://thesis-experiment/./src/Ex2TrialsDisjunctive.js","webpack://thesis-experiment/src/App.vue","webpack://thesis-experiment/./src/App.vue?6a4a","webpack://thesis-experiment/./src/App.vue","webpack://thesis-experiment/./src/magpie.config.js","webpack://thesis-experiment/./src/main.js","webpack://thesis-experiment/webpack/bootstrap","webpack://thesis-experiment/webpack/runtime/chunk loaded","webpack://thesis-experiment/webpack/runtime/compat get default export","webpack://thesis-experiment/webpack/runtime/define property getters","webpack://thesis-experiment/webpack/runtime/ensure chunk","webpack://thesis-experiment/webpack/runtime/get javascript chunk filename","webpack://thesis-experiment/webpack/runtime/get mini-css chunk filename","webpack://thesis-experiment/webpack/runtime/global","webpack://thesis-experiment/webpack/runtime/hasOwnProperty shorthand","webpack://thesis-experiment/webpack/runtime/load script","webpack://thesis-experiment/webpack/runtime/make namespace object","webpack://thesis-experiment/webpack/runtime/node module decorator","webpack://thesis-experiment/webpack/runtime/publicPath","webpack://thesis-experiment/webpack/runtime/jsonp chunk loading","webpack://thesis-experiment/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('Experiment',{attrs:{\"title\":\"Experiment\"}},[_c('InstructionScreen',{attrs:{\"title\":'Welcome'}},[_c('p',[_c('strong',[_vm._v(\"Welcome, and thank you for participating!\")])]),_c('p',[_vm._v(\" In this experiment, you will answer questions about the outcome of an \"),_c('em',[_vm._v(\"Icon Card Game\")]),_vm._v(\". First, you will read instructions explaining how the game works. Then you will answer a few warm-up questions to ensure the game is clear. After that, you will proceed to the main part of the experiment. \"),_c('br'),_c('br'),_vm._v(\" Now let’s begin with the game instructions. \")])]),_c('InstructionScreen',{attrs:{\"title\":'Instructions'}},[_c('p',[_vm._v(\" Alice and Bob are playing this \\\"Icon Card Game\\\". Each player receives a \"),_c('strong',[_vm._v(\"deck of 10 cards\")]),_vm._v(\". Each deck is made up of only two types of icons. Each player’s deck contains a \"),_c('strong',[_vm._v(\"different pair of icons\")]),_vm._v(\" (i.e., Alice’s two icon types are not the same as Bob’s).\"),_c('br'),_vm._v(\" Each player chooses exactly how many cards of each icon will make up their deck. \"),_c('strong',[_vm._v(\"Both players know the exact number of each icon in both decks.\")])]),_c('img',{attrs:{\"src\":\"https://aidayg24.github.io/causal_selection/images/Ex1/Instruction/image0.jpg\",\"alt\":\"cards and icons\"}})]),_c('InstructionScreen',{attrs:{\"title\":'Instructions'}},[_c('p',[_vm._v(\" After the players have chosen the number of each icon in their deck, the deck is assembled, shuffled, and placed face-down in front of them. \")]),_c('img',{attrs:{\"src\":\"https://aidayg24.github.io/causal_selection/images/Ex1/Instruction/image1.jpg\",\"alt\":\"cards and icons\"}})]),_c('InstructionScreen',{attrs:{\"title\":'Instructions'}},[_c('p',[_vm._v(\" A point system is then assigned \"),_c('em',[_c('strong',[_vm._v(\"randomly\")])]),_vm._v(\" to the icons.\"),_c('br'),_vm._v(\" In each deck, \"),_c('strong',[_vm._v(\"one icon gives Alice one point, and the other icon gives Bob one point.\")]),_c('br'),_vm._v(\" For simplicity, only the icon that gives \"),_c('em',[_vm._v(\"Alice\")]),_vm._v(\" a point is shown. The other icon automatically counts for Bob. The \"),_c('strong',[_vm._v(\"winning rules of the game are displayed here as well\")]),_vm._v(\". \")]),_c('img',{attrs:{\"src\":\"https://aidayg24.github.io/causal_selection/images/Ex1/Instruction/image2.jpg\",\"alt\":\"cards and icons\"}})]),_c('InstructionScreen',{attrs:{\"title\":'Instructions'}},[_c('p',[_vm._v(\" Then both players draw one card at random from their own deck at the same time. You will then be told: \")]),_c('ul',[_c('li',[_vm._v(\"which cards the players drew, and\")]),_c('li',[_vm._v(\"each player's number of points\")])]),_c('p',[_vm._v(\" Your task is to answer some questions about the game, based on the players’ deck choices and the winning rules of the game. \")]),_c('p',[_c('strong',[_vm._v(\"Please answer according to your own judgment.\")]),_vm._v(\" There are no right or wrong answers. \")]),_c('p',[_vm._v(\" Before we start the experiment, let’s do a quick warm-up to ensure the instructions are clear. \")]),_c('img',{attrs:{\"src\":\"https://aidayg24.github.io/causal_selection/images/Ex1/Instruction/image3.jpg\",\"alt\":\"cards and icons\"}})]),_c('Screen',[_c('img',{attrs:{\"src\":\"https://aidayg24.github.io/causal_selection/images/Ex1/instruction/image2.jpg\",\"alt\":\"cards and icons\"}}),_c('ForcedChoiceScreen',{attrs:{\"question\":`Is it possible that Bob draws a violin card from his deck?`,\"options\":['Yes', 'No', 'I am not sure'],\"feedbackTime\":-1},scopedSlots:_vm._u([{key:\"feedback\",fn:function(){return [(_vm.$magpie.measurements.response === 'No')?_c('p',{staticClass:\"feedback correct\"},[_vm._v(\" Correct!\"),_c('br')]):(_vm.$magpie.measurements.response === 'I am not sure')?_c('p',{staticClass:\"feedback unsure\"},[_vm._v(\" See Below!\"),_c('br')]):_c('p',{staticClass:\"feedback incorrect\"},[_vm._v(\" Incorrect!\"),_c('br')]),_c('p',[_vm._v(\" Each deck is made up of only two types of icons. Each player has a \"),_c('strong',[_vm._v(\"different pair of icons\")]),_vm._v(\" in their deck.\"),_c('br'),_c('span',[_vm._v(\" Let's go to the next one.\")])]),_c('p'),_c('button',{on:{\"click\":function($event){return _vm.$magpie.nextScreen()}}},[_vm._v(\"Ok\")])]},proxy:true}])})],1),_c('Screen',[_c('ForcedChoiceScreen',{attrs:{\"question\":`Did Bob choose to include 3 guitars in his deck, or was the number of icons not his choice?`,\"options\":['Yes, ', 'No', 'I am not sure'],\"feedbackTime\":-1},scopedSlots:_vm._u([{key:\"feedback\",fn:function(){return [(_vm.$magpie.measurements.response === 'Yes')?_c('p',{staticClass:\"feedback correct\"},[_vm._v(\" Correct! \")]):(_vm.$magpie.measurements.response === 'I am not sure')?_c('p',{staticClass:\"feedback unsure\"},[_vm._v(\" See Below!\"),_c('br')]):_c('p',{staticClass:\"feedback incorrect\"},[_vm._v(\" Incorrect!\"),_c('br')]),_c('p',[_c('strong',[_vm._v(\"Each player chooses exactly how many cards of each icon will make up their deck.\")]),_c('br')]),_c('p'),_c('button',{on:{\"click\":function($event){return _vm.$magpie.nextScreen()}}},[_vm._v(\"Ok\")])]},proxy:true}])})],1),_c('Screen',[_c('img',{attrs:{\"src\":\"https://aidayg24.github.io/causal_selection/images/Ex1/instruction/image2.jpg\",\"alt\":\"cards and icons\"}}),_c('ForcedChoiceScreen',{attrs:{\"question\":`Here, if for a player to win, they need exactly 2 points, can Alice win if she draws a saxophone card?`,\"options\":['Yes', 'No', 'I am not sure'],\"feedbackTime\":-1},scopedSlots:_vm._u([{key:\"feedback\",fn:function(){return [(_vm.$magpie.measurements.response === 'No')?_c('p',{staticClass:\"feedback correct\"},[_vm._v(\" Correct!\"),_c('br')]):(_vm.$magpie.measurements.response === 'I am not sure')?_c('p',{staticClass:\"feedback unsure\"},[_vm._v(\" See Below!\"),_c('br')]):_c('p',{staticClass:\"feedback incorrect\"},[_vm._v(\" Incorrect!\"),_c('br')]),_c('p',[_vm._v(\" To win, Alice needs exactly two points.\"),_c('br'),_vm._v(\" A saxophone card gives Bob 1 point and does not give any points to Alice.\"),_c('br'),_vm._v(\" Even if Bob draws a guitar card, it will only give one point to Alice, and she still cannot win. \"),_c('br'),_c('span',[_vm._v(\" Let's go to the next one.\")])]),_c('p'),_c('button',{on:{\"click\":function($event){return _vm.$magpie.nextScreen()}}},[_vm._v(\"Ok\")])]},proxy:true}])})],1),_c('Screen',[_c('ForcedChoiceScreen',{attrs:{\"question\":`Does Alice know how many guitar cards Bob has in his deck?`,\"options\":['Yes', 'No', 'I am not sure'],\"feedbackTime\":-1},scopedSlots:_vm._u([{key:\"feedback\",fn:function(){return [(_vm.$magpie.measurements.response === 'Yes')?_c('p',{staticClass:\"feedback correct\"},[_vm._v(\" Correct! \")]):(_vm.$magpie.measurements.response === 'I am not sure')?_c('p',{staticClass:\"feedback unsure\"},[_vm._v(\" See Below!\"),_c('br')]):_c('p',{staticClass:\"feedback incorrect\"},[_vm._v(\" Incorrect!\"),_c('br')]),_c('p',[_c('strong',[_vm._v(\"Both players know the exact number of each icon in every deck.\")]),_c('br'),_c('span',[_vm._v(\" Let's start the experiment!\")])]),_c('p'),_c('button',{on:{\"click\":function($event){return _vm.$magpie.nextScreen()}}},[_vm._v(\"Ok\")])]},proxy:true}])})],1),_vm._l((_vm.Ex1TrialsShuffled),function(t,i){return [_c('Screen',{key:i},[_c('Slide',[_c('img',{staticClass:\"card-img\",attrs:{\"src\":t.cardsImg,\"alt\":\"card image\"}}),_c('img',{staticClass:\"play-img\",attrs:{\"src\":t.playImg,\"alt\":\"play image\"}}),_c('p',[_c('strong',[_c('em',[_vm._v(\" Imagine you are Alice. Given the rules of the game and the results, how much would you agree with each statement? \")])])]),_c('p',[_c('strong',[_vm._v(_vm._s(t.statement))])]),_c('MultipleChoiceMatrixInput',{attrs:{\"options\":['Strongly disagree', 'Disagree', 'Neutral', 'Agree', 'Strongly agree'],\"questions\":[t.q1, t.q2, t.q3, t.q4],\"randomize\":true,\"responses\":_vm.$magpie.measurements[t.tag]},on:{\"update:responses\":function($event){return _vm.$set(_vm.$magpie.measurements, t.tag, $event)}}}),_c('button',{attrs:{\"disabled\":!_vm.$magpie.measurements[t.tag] || _vm.$magpie.measurements[t.tag].length < 4},on:{\"click\":function($event){return _vm.$magpie.saveAndNextScreen()}}},[_vm._v(\"Next\")])],1)],1)]}),_c('InstructionScreen',{attrs:{\"title\":'Instructions'}},[_c('p',[_vm._v(\" Alice and Bob really enjoyed the previous game, so they decided to play \"),_c('strong',[_vm._v(\"“Icon Card Game 2”\")]),_vm._v(\"!\"),_c('br'),_vm._v(\" The rules are the same as before, except that in this game the number of each icon in the deck is \"),_c('strong',[_vm._v(\"generated randomly\")]),_vm._v(\" rather than chosen by the players.\"),_c('br'),_vm._v(\" After each deck was assembled, the players were informed about the number of each icon in both decks. Then, just as before, the decks were shuffled and placed face-down in front of them. \")])]),_c('InstructionScreen',{attrs:{\"title\":'Instructions'}},[_c('p',[_vm._v(\"After the game, Alice, \"),_c('strong',[_c('em',[_vm._v(\"who knows the exact number of each icon in every deck,\")])]),_vm._v(\" makes a statement about the game. \"),_c('br'),_vm._v(\" Your task is to answer some questions about the game, based on Alice's knowledge and the statement, and the winning rules of the game.\"),_c('br')]),_c('p',[_c('strong',[_vm._v(\"Please answer according to your own judgment.\")]),_vm._v(\" There are no right or wrong answers.\")]),_c('p',[_vm._v(\" Before we start the experiment, let’s do the quick warm-up questions to ensure the instructions are clear. \")]),_c('p'),_c('img',{attrs:{\"src\":\"https://aidayg24.github.io/causal_selection/images/Ex2/instruction/Alice.jpg\",\"alt\":\"Alice\"}})]),_c('Screen',[_c('ForcedChoiceScreen',{attrs:{\"question\":`Does Alice know the exact number of icons in every deck?`,\"options\":['Yes', 'No', 'I am not sure'],\"feedbackTime\":-1},scopedSlots:_vm._u([{key:\"feedback\",fn:function(){return [(_vm.$magpie.measurements.response === 'Yes')?_c('p',{staticClass:\"feedback correct\"},[_vm._v(\" Correct!\"),_c('br')]):(_vm.$magpie.measurements.response === 'I am not sure')?_c('p',{staticClass:\"feedback unsure\"},[_vm._v(\" See Below!\"),_c('br')]):_c('p',{staticClass:\"feedback incorrect\"},[_vm._v(\" Incorrect!\"),_c('br')]),_c('p',[_vm._v(\" Both players were informed about the number of icons in every deck. \"),_c('span',[_vm._v(\" Let's go to the next one.\")])]),_c('p'),_c('button',{on:{\"click\":function($event){return _vm.$magpie.nextScreen()}}},[_vm._v(\"Ok\")])]},proxy:true}])})],1),_c('Screen',[_c('ForcedChoiceScreen',{attrs:{\"question\":`Does Bob decide how many of each icon to have in his deck?`,\"options\":['Yes', 'No', 'I am not sure'],\"feedbackTime\":-1},scopedSlots:_vm._u([{key:\"feedback\",fn:function(){return [(_vm.$magpie.measurements.response === 'No')?_c('p',{staticClass:\"feedback correct\"},[_vm._v(\" Correct! \")]):(_vm.$magpie.measurements.response === 'I am not sure')?_c('p',{staticClass:\"feedback unsure\"},[_vm._v(\" See Below!\"),_c('br')]):_c('p',{staticClass:\"feedback incorrect\"},[_vm._v(\" Incorrect!\"),_c('br')]),_c('p',[_vm._v(\" No. The players do not have control over the number of icons in the decks; the numbers are assigned randomly. \"),_c('span',[_vm._v(\" Let's start the experiment!\")])]),_c('p'),_c('button',{on:{\"click\":function($event){return _vm.$magpie.nextScreen()}}},[_vm._v(\"Ok\")])]},proxy:true}])})],1),_vm._l((_vm.Ex2TrialsShuffled),function(t,i){return [_c('Screen',{key:i},[_c('Slide',[_c('img',{staticClass:\"play-img\",attrs:{\"src\":t.playImg,\"alt\":\"play image\"}}),_c('img',{staticClass:\"alice-img\",attrs:{\"src\":t.aliceImg,\"alt\":\"Alice image\"}}),_c('p',[_c('strong',[_c('em',[_vm._v(\" Given the rules of the game, the players’ knowledge about the proportion of each icon in their decks, and what Alice said: \")])])]),_c('p',[_c('strong',[_vm._v(_vm._s(t.q1))])]),_c('MultipleChoiceInput',{attrs:{\"orientation\":\"horizontal\",\"options\":['less than 5', '5', 'more than 5'],\"response\":_vm.$magpie.measurements['ANorm_' + t.tag]},on:{\"update:response\":function($event){return _vm.$set(_vm.$magpie.measurements, 'ANorm_' + t.tag, $event)}}}),_c('p',[_c('strong',[_vm._v(_vm._s(t.q2))])]),_c('MultipleChoiceInput',{attrs:{\"orientation\":\"horizontal\",\"options\":['less than 5', '5', 'more than 5'],\"response\":_vm.$magpie.measurements['BNorm_' + t.tag]},on:{\"update:response\":function($event){return _vm.$set(_vm.$magpie.measurements, 'BNorm_' + t.tag, $event)}}}),_c('p',[_c('strong',[_vm._v(_vm._s(t.q3))])]),_c('MultipleChoiceInput',{attrs:{\"orientation\":\"horizontal\",\"options\":['fewer', 'same number', 'more'],\"response\":_vm.$magpie.measurements['compare_' + t.tag]},on:{\"update:response\":function($event){return _vm.$set(_vm.$magpie.measurements, 'compare_' + t.tag, $event)}}}),_c('button',{attrs:{\"disabled\":_vm.$magpie.measurements['ANorm_' + t.tag] === undefined\n                  || _vm.$magpie.measurements['BNorm_' + t.tag] === undefined\n                  || _vm.$magpie.measurements['compare_' + t.tag] === undefined},on:{\"click\":function($event){return _vm.$magpie.saveAndNextScreen()}}},[_vm._v(\"Next\")])],1)],1)]}),_c('PostTestScreen'),_c('SubmitResultsScreen')],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// Define the fixed part of the URL once\nconst BASE_URL = \"https://aidayg24.github.io/causal_selection/images/Ex1/Main/\";\n\n\n// All question screens as plain data\nconst Ex1TrialsConj = [\n  {\n    cardsImg: `${BASE_URL}instrument2Cards.jpg`,\n    playImg: `${BASE_URL}instrument2Play.jpg`,\n    q1: \"I chose a good mix of cards for my deck.\",\n    q2: \"I drew the violin card.\",\n    q3: \"Bob chose a bad mix of cards for his deck.\",\n    q4: \"Bob drew the guitar card.\",\n    statement: \"I won because \",\n    tag: \"instrument2\"\n  },\n  {\n    cardsImg: `${BASE_URL}superhero2Cards.jpg`,\n    playImg: `${BASE_URL}superhero2Play.jpg`,\n    q1: \"I chose a bad mix of cards for my deck.\",\n    q2: \"I drew the Spider-Man card.\",\n    q3: \"Bob chose a good mix of cards for his deck.\",\n    q4: \"Bob drew the Joker card.\",\n    statement: \"I lost because \",\n    tag: \"superhero2\"\n  }\n];\n\nexport default Ex1TrialsConj;\n","// Define the fixed part of the URL once\nconst BASE_URL = \"https://aidayg24.github.io/causal_selection/images/Ex1/Main/\";\n\n\n// All question screens as plain data\nconst Ex1TrialsDis = [\n  {\n    cardsImg: `${BASE_URL}instrument1Cards.jpg`,\n    playImg: `${BASE_URL}instrument1Play.jpg`,\n    q1: \"I chose a good mix of cards for my deck.\",\n    q2: \"I drew the violin card.\",\n    q3: \"Bob chose a bad mix of cards for his deck.\",\n    q4: \"Bob drew the guitar card.\",\n    statement: \"I won because \",\n    tag: \"instrument1\"\n  },\n  {\n    cardsImg: `${BASE_URL}superhero1Cards.jpg`,\n    playImg: `${BASE_URL}superhero1Play.jpg`,\n    q1: \"I chose a bad mix of cards for my deck.\",\n    q2: \"I drew the Spider-Man card.\",\n    q3: \"Bob chose a good mix of cards for his deck.\",\n    q4: \"Bob drew the Joker card.\",\n    statement: \"I lost because \",\n    tag: \"superhero1\"\n  }\n];\n\nexport default Ex1TrialsDis;\n","// Define the fixed part of the URL once\nconst BASE_URL = \"https://aidayg24.github.io/causal_selection/images/Ex2/main/\";\n\n// All question screens as plain data\nconst Ex2TrialsConj = [\n  {\n    playImg: `${BASE_URL}instrumentPlay.jpg`,\n    aliceImg: `${BASE_URL}instrumentAlice.jpg`,\n    q1: \"1. How many violin cards does Alice have?\",\n    q2: \"2. How many guitar cards does Bob have?\",\n    q3: \"3. Does Alice have more, fewer, or the same number of violin cards as Bob has guitar cards?\",\n    tag: \"instrument\"\n  },\n  {\n    playImg: `${BASE_URL}superpowerPlay.jpg`,\n    aliceImg: `${BASE_URL}superpowerAlice.jpg`,\n    q1: \"1. How many superpower cards does Alice have?\",\n    q2: \"2. How many beer cards does Bob have?\",\n    q3: \"3. Does Alice have more, fewer, or the same number of superpower cards as Bob has beer cards?\",\n    tag: \"superpower\"\n  },\n  {\n    playImg: `${BASE_URL}studyPlay.jpg`,\n    aliceImg: `${BASE_URL}studyAlice.jpg`,\n    q1: \"1. How many history cards does Alice have?\",\n    q2: \"2. How many biology cards does Bob have?\",\n    q3: \"3. Does Alice have more, fewer, or the same number of history cards as Bob has biology cards?\",\n    tag: \"study\"\n  },\n  {\n    playImg: `${BASE_URL}gamePlay.jpg`,\n    aliceImg: `${BASE_URL}gameAlice.jpg`,\n    q1: \"1. How many party cards does Alice have?\",\n    q2: \"2. How many study cards does Bob have?\",\n    q3: \"3. Does Alice have more, fewer, or the same number of party cards as Bob has study cards?\",\n    tag: \"game\"\n  }\n];\n\nexport default Ex2TrialsConj;\n","// Define the fixed part of the URL once\nconst BASE_URL = \"https://aidayg24.github.io/causal_selection/images/Ex2/main/\";\n\n// All question screens as plain data\nconst Ex2TrialsDis = [\n  {\n    playImg: `${BASE_URL}drugPlay.jpg`,\n    aliceImg: `${BASE_URL}drugAlice.jpg`,\n    q1: \"1. How many pill cards does Alice have?\",\n    q2: \"2. How many beer cards does Bob have?\",\n    q3: \"3. Does Alice have more, fewer, or the same number of pill cards as Bob has beer cards?\",\n    tag: \"drug\"\n  },\n  {\n    playImg: `${BASE_URL}matrixPlay.jpg`,\n    aliceImg: `${BASE_URL}matrixAlice.jpg`,\n    q1: \"1. How many red pill cards does Alice have?\",\n    q2: \"2. How many eat cards does Bob have?\",\n    q3: \"3. Does Alice have more, fewer, or the same number of red pill cards as Bob has eat cards?\",\n    tag: \"matrix\"\n  },\n  {\n    playImg: `${BASE_URL}foodPlay.jpg`,\n    aliceImg: `${BASE_URL}foodAlice.jpg`,\n    q1: \"1. How many salad cards does Alice have?\",\n    q2: \"2. How many popcorn cards does Bob have?\",\n    q3: \"3. Does Alice have more, fewer, or the same number of salad cards as Bob has popcorn cards?\",\n    tag: \"food\"\n  },\n  {\n    playImg: `${BASE_URL}superheroPlay.jpg`,\n    aliceImg: `${BASE_URL}superheroAlice.jpg`,\n    q1: \"1. How many spiderman cards does Alice have?\",\n    q2: \"2. How many joker cards does Bob have?\",\n    q3: \"3. Does Alice have more, fewer, or the same number of spiderman cards as Bob has joker cards?\",\n    tag: \"superhero\"\n  }\n];\n\nexport default Ex2TrialsDis;\n","<template>\n  <Experiment title=\"Experiment\">\n    <!-- Experiment 1 -->\n    <InstructionScreen :title=\"'Welcome'\">\n      <p><strong>Welcome, and thank you for participating!</strong></p>\n\n      <p>\n        In this experiment, you will answer questions about the outcome of an\n        <em>Icon Card Game</em>. First, you will read instructions explaining how the\n        game works. Then you will answer a few warm-up questions to ensure the game\n        is clear. After that, you will proceed to the main part of the experiment.\n        <br>\n        <br>\n        Now let’s begin with the game instructions.\n      </p>\n    </InstructionScreen>\n  \n    <InstructionScreen :title=\"'Instructions'\">\n      <p>\n        Alice and Bob are playing this \"Icon Card Game\".\n        Each player receives a <strong>deck of 10 cards</strong>. \n        Each deck is made up of only two types of icons. \n        Each player’s deck contains a <strong>different pair of icons</strong> \n        (i.e., Alice’s two icon types are not the same as Bob’s).<br>\n        Each player chooses exactly how many cards of each icon will make up their deck.\n        <strong>Both players know the exact number of each icon in both decks.</strong>\n      </p>\n      <img src=\"https://aidayg24.github.io/causal_selection/images/Ex1/Instruction/image0.jpg\" alt=\"cards and icons\">\n    </InstructionScreen>\n\n    <InstructionScreen :title=\"'Instructions'\">\n      <p>\n        After the players have chosen the number of each icon in their deck,\n        the deck is assembled, shuffled, and placed face-down in front of them.\n      </p>\n\n      <img src=\"https://aidayg24.github.io/causal_selection/images/Ex1/Instruction/image1.jpg\" alt=\"cards and icons\">\n    </InstructionScreen>\n\n    <InstructionScreen :title=\"'Instructions'\">\n      <p>\n        A point system is then assigned <em><strong>randomly</strong></em> to the icons.<br/>\n        In each deck, <strong>one icon gives Alice one point, and the other icon gives Bob one point.</strong><br/>\n        For simplicity, only the icon that gives <em>Alice</em> a point is shown. The other icon automatically counts for Bob.\n        The <strong>winning rules of the game are displayed here as well</strong>.\n      </p>\n\n      <img src=\"https://aidayg24.github.io/causal_selection/images/Ex1/Instruction/image2.jpg\" alt=\"cards and icons\">\n    </InstructionScreen>\n\n    <InstructionScreen :title=\"'Instructions'\">\n      <p>\n        Then both players draw one card at random from their own deck at the \n        same time. You will then be told:\n        </p>\n        <ul>\n          <li>which cards the players drew, and</li>\n          <li>each player's number of points</li>\n        </ul>\n        <p>\n          Your task is to answer some questions about the game, based on the players’ deck choices and the winning rules of the game.\n        </p>\n        <p>\n          <strong>Please answer according to your own judgment.</strong> There are no right or wrong answers.\n        </p>\n        <p>\n          Before we start the experiment, let’s do a quick warm-up to ensure the instructions are clear.\n      </p>\n\n\n      <img src=\"https://aidayg24.github.io/causal_selection/images/Ex1/Instruction/image3.jpg\" alt=\"cards and icons\">\n    </InstructionScreen>\n\n    <!-- warm-up knowledge check -->\n    <Screen>\n      <img src=\"https://aidayg24.github.io/causal_selection/images/Ex1/instruction/image2.jpg\" alt=\"cards and icons\">\n\n      <ForcedChoiceScreen\n          :question=\"`Is it possible that Bob draws a violin card from his deck?`\"\n          :options=\"['Yes', 'No', 'I am not sure']\"\n          :feedbackTime=\"-1\" >\n\n        <template #feedback>\n          <p v-if=\"$magpie.measurements.response === 'No'\" class=\"feedback correct\">\n            Correct!<br/>\n          </p>\n          <!-- 'I am not sure' branch -->\n          <p v-else-if=\"$magpie.measurements.response === 'I am not sure'\" class=\"feedback unsure\">\n            See Below!<br/>\n          </p>\n          <p v-else class=\"feedback incorrect\">\n            Incorrect!<br>\n            <p>\n              Each deck is made up of\n              only two types of icons. Each player has a <strong>different pair of icons</strong>\n              in their deck.<br>\n            <span> Let's go to the next one.</span>\n            </p>\n          </p>\n          <button @click=\"$magpie.nextScreen()\">Ok</button>\n        </template>\n\n      </ForcedChoiceScreen>\n    </Screen>\n\n    <Screen>\n      <ForcedChoiceScreen\n          :question=\"`Did Bob choose to include 3 guitars in his deck, or was the number of icons not his choice?`\"\n          :options=\"['Yes, ', 'No', 'I am not sure']\"\n          :feedbackTime=\"-1\" >\n\n        <template #feedback>\n          <p v-if=\"$magpie.measurements.response === 'Yes'\" class=\"feedback correct\">\n            Correct!\n          </p>\n          <!-- 'I am not sure' branch -->\n          <p v-else-if=\"$magpie.measurements.response === 'I am not sure'\" class=\"feedback unsure\">\n            See Below!<br/>\n          </p>\n          <p v-else class=\"feedback incorrect\">\n            Incorrect!<br>\n            <p>\n              <strong>Each player chooses exactly how many cards of each icon will make up their deck.</strong> \n              <br/>\n            </p>\n          </p>\n          <button @click=\"$magpie.nextScreen()\">Ok</button>\n        </template>\n      </ForcedChoiceScreen>\n    </Screen>\n\n    <Screen>\n      <img src=\"https://aidayg24.github.io/causal_selection/images/Ex1/instruction/image2.jpg\" alt=\"cards and icons\">\n\n      <ForcedChoiceScreen\n          :question=\"`Here, if for a player to win, they need exactly 2 points, can Alice win if she draws a saxophone card?`\"\n          :options=\"['Yes', 'No', 'I am not sure']\" \n          :feedbackTime=\"-1\">\n\n        <template #feedback>\n          <p v-if=\"$magpie.measurements.response === 'No'\" class=\"feedback correct\">\n            Correct!<br/>\n          </p>\n          <!-- 'I am not sure' branch -->\n          <p v-else-if=\"$magpie.measurements.response === 'I am not sure'\" class=\"feedback unsure\">\n            See Below!<br/>\n          </p>\n          <p v-else class=\"feedback incorrect\">\n            Incorrect!<br>\n            <p>\n              To win, Alice needs exactly two points.<br/>\n              A saxophone card gives Bob 1 point and does not give any points to Alice.<br/>\n              Even if Bob draws a guitar card, it will only give one point to Alice, and she still cannot win.\n              <br>\n              <span> Let's go to the next one.</span>\n            </p>\n          </p>\n          <button @click=\"$magpie.nextScreen()\">Ok</button>\n        </template>\n      </ForcedChoiceScreen>\n    </Screen>\n\n    <Screen>\n      <ForcedChoiceScreen\n          :question=\"`Does Alice know how many guitar cards Bob has in his deck?`\"\n          :options=\"['Yes', 'No', 'I am not sure']\"\n          :feedbackTime=\"-1\" >\n\n        <template #feedback>\n          <p v-if=\"$magpie.measurements.response === 'Yes'\" class=\"feedback correct\">\n            Correct!\n          </p>\n          <!-- 'I am not sure' branch -->\n          <p v-else-if=\"$magpie.measurements.response === 'I am not sure'\" class=\"feedback unsure\">\n            See Below!<br/>\n          </p>\n          <p v-else class=\"feedback incorrect\">\n            Incorrect!<br>\n            <p>\n              <strong>Both players know the exact number of each icon in every deck.</strong> \n              <br/>\n              <span> Let's start the experiment!</span>\n            </p>\n          </p>\n          <button @click=\"$magpie.nextScreen()\">Ok</button>\n        </template>\n      </ForcedChoiceScreen>\n    </Screen>\n\n    <!-- main experiment 1 -->\n    <template v-for=\"(t, i) in Ex1TrialsShuffled\">\n      <Screen :key=\"i\">\n        <Slide>\n          <img :src=\"t.cardsImg\" class=\"card-img\" alt=\"card image\" />\n          <img :src=\"t.playImg\" class=\"play-img\" alt=\"play image\" />\n          <p><strong><em>\n            Imagine you are Alice. Given the rules of the game and the results, \n            how much would you agree with each statement?\n          </em></strong></p>\n\n          <p><strong>{{ t.statement }}</strong></p>\n          <MultipleChoiceMatrixInput\n            :options=\"['Strongly disagree', 'Disagree', 'Neutral', 'Agree', 'Strongly agree']\"\n            :questions=\"[t.q1, t.q2, t.q3, t.q4]\"\n            :randomize=\"true\"\n            :responses.sync= \"$magpie.measurements[t.tag]\"\n        />\n          <button\n            :disabled=\"!$magpie.measurements[t.tag] || $magpie.measurements[t.tag].length < 4\"\n            @click=\"$magpie.saveAndNextScreen()\">Next</button>\n        </Slide>\n      </Screen>\n    </template>\n\n\n\n    <!-- Experiment 2 -->\n    <InstructionScreen :title=\"'Instructions'\">\n      <p>\n      Alice and Bob really enjoyed the previous game, so they decided to play \n      <strong>“Icon Card Game 2”</strong>!<br/>\n      The rules are the same as before, \n      except that in this game the number of each icon in the deck is \n      <strong>generated randomly</strong> rather than chosen by the players.<br/>\n\n      After each deck was assembled, \n      the players were informed about the number of each icon in both decks.\n      Then, just as before, the decks were shuffled and placed face-down in front of them.\n    </p>\n    </InstructionScreen>\n\n    <InstructionScreen :title=\"'Instructions'\">\n      <p>After the game, Alice, <strong><em>who knows the exact number of each icon in every deck,</em></strong> \n        makes a statement about the game.\n      <br/> Your task is to answer some questions about the game, based on Alice's knowledge and the statement, \n      and the winning rules of the game.<br/>\n\n      <p><strong>Please answer according to your own judgment.</strong> There are no right or wrong answers.</p>\n      <p>\n        Before we start the experiment, let’s do the quick warm-up questions to\n        ensure the instructions are clear.\n      </p>\n\n      </p>\n\n      <img src=\"https://aidayg24.github.io/causal_selection/images/Ex2/instruction/Alice.jpg\" alt=\"Alice\">\n    </InstructionScreen>\n\n    <!-- warm-up knowledge check -->\n    <Screen>\n      <ForcedChoiceScreen\n          :question=\"`Does Alice know the exact number of icons in every deck?`\"\n          :options=\"['Yes', 'No', 'I am not sure']\"\n          :feedbackTime=\"-1\" >\n\n        <template #feedback>\n          <p v-if=\"$magpie.measurements.response === 'Yes'\" class=\"feedback correct\">\n            Correct!<br/>\n          </p>\n          <!-- 'I am not sure' branch -->\n          <p v-else-if=\"$magpie.measurements.response === 'I am not sure'\" class=\"feedback unsure\">\n            See Below!<br/>\n          </p>\n          <p v-else class=\"feedback incorrect\">\n            Incorrect!<br>\n            <p>\n              Both players were informed about the number of icons in every deck.\n            <span> Let's go to the next one.</span>\n            </p>\n          </p>\n          <button @click=\"$magpie.nextScreen()\">Ok</button>\n        </template>\n\n      </ForcedChoiceScreen>\n    </Screen>\n\n    <Screen>\n      <ForcedChoiceScreen\n          :question=\"`Does Bob decide how many of each icon to have in his deck?`\"\n          :options=\"['Yes', 'No', 'I am not sure']\"\n          :feedbackTime=\"-1\" >\n\n        <template #feedback>\n          <p v-if=\"$magpie.measurements.response === 'No'\" class=\"feedback correct\">\n            Correct!\n          </p>\n          <!-- 'I am not sure' branch -->\n          <p v-else-if=\"$magpie.measurements.response === 'I am not sure'\" class=\"feedback unsure\">\n            See Below!<br/>\n          </p>\n          <p v-else class=\"feedback incorrect\">\n            Incorrect!<br>\n            <p>\n              No. The players do not have control over the number of icons in the decks; \n              the numbers are assigned randomly.\n\n              <span> Let's start the experiment!</span>\n            </p>\n          </p>\n          <button @click=\"$magpie.nextScreen()\">Ok</button>\n        </template>\n      </ForcedChoiceScreen>\n    </Screen>\n\n    <!-- main experiment -->\n    <template v-for=\"(t, i) in Ex2TrialsShuffled\">\n      <Screen :key=\"i\">\n        <Slide>\n          <img :src=\"t.playImg\" class=\"play-img\" alt=\"play image\" />\n          <img :src=\"t.aliceImg\" class=\"alice-img\" alt=\"Alice image\" />\n          <p><strong><em>\n            Given the rules of the game, the players’ knowledge about the proportion of each icon in their decks, and what Alice said:\n          </em></strong></p>\n\n          <p><strong>{{ t.q1 }}</strong></p>\n          <MultipleChoiceInput \n          orientation=\"horizontal\"\n          :options=\"['less than 5', '5', 'more than 5']\"\n          :response.sync=\"$magpie.measurements['ANorm_' + t.tag]\" />\n\n          <p><strong>{{ t.q2 }}</strong></p>\n          <MultipleChoiceInput \n          orientation=\"horizontal\"\n          :options=\"['less than 5', '5', 'more than 5']\"\n          :response.sync=\"$magpie.measurements['BNorm_' + t.tag]\" />\n\n          <p><strong>{{ t.q3 }}</strong></p>\n          <MultipleChoiceInput \n          orientation=\"horizontal\"\n          :options=\"['fewer', 'same number', 'more']\" \n          :response.sync=\"$magpie.measurements['compare_' + t.tag]\" />\n\n          <button\n            :disabled=\"$magpie.measurements['ANorm_' + t.tag] === undefined\n                    || $magpie.measurements['BNorm_' + t.tag] === undefined\n                    || $magpie.measurements['compare_' + t.tag] === undefined\"\n            @click=\"$magpie.saveAndNextScreen()\">Next</button>\n        </Slide>\n      </Screen>\n    </template>\n\n\n    <PostTestScreen />\n    <SubmitResultsScreen />\n  </Experiment>\n</template>\n\n<style scoped>\n  button:disabled {\n    background-color: #ccc;   /* gray background */\n    color: #666;              /* dimmed text */\n    cursor: not-allowed;      /* \"forbidden\" cursor */\n    opacity: 0.6;             /* slightly transparent */\n  }\n  .feedback {\n    font-weight: bold;\n    text-align: center;\n    margin: 1em 0;\n  }\n\n  .feedback.correct {\n    color: green;\n    font-size: 2em; /* super big */\n  }\n  .feedback.unsure {\n    color: #E8CC0E;\n    font-size: 2em; /* super big */\n  }\n\n  .feedback.incorrect {\n    color: red;\n    font-size: 2em; /* super big */\n  }\n  .play-img {\n    width: 1800px;\n    /* height: 845px; */\n    object-fit: contain; /* scale proportionally, no stretching */\n  }\n  .alice-img {\n    width: 700px;\n    /* height: 400px;       */\n    object-fit: contain; /* scale proportionally, no stretching */\n  }\n  .card-img {\n    width: 700px;\n    /* height: 400px;       */\n    object-fit: contain; /* scale proportionally, no stretching */\n  }\n</style>\n\n\n<script>\nimport _ from 'lodash';\nimport Ex1TrialsConj from './Ex1TrialsConjunctive.js';\nimport Ex1TrialsDis from './Ex1TrialsDisjunctive.js';\n\nimport Ex2TrialsConj from './Ex2TrialsConjunctive.js';\nimport Ex2TrialsDis from './Ex2TrialsDisjunctive.js';\n\nexport default {\n  name: \"App\",\n  data() {\n    // Randomly assign once when the component is created\n    const condition = Math.random() < 0.5 ? 'conjunctive' : 'disjunctive';\n\n    return {\n      condition,   // for logging if needed\n\n      // For Experiment 1\n      Ex1TrialsShuffled: _.shuffle(\n        condition === 'conjunctive' ? Ex1TrialsConj : Ex1TrialsDis\n      ),\n\n      // For Experiment 2\n      Ex2TrialsShuffled: _.shuffle(\n        condition === 'conjunctive' ? Ex2TrialsConj : Ex2TrialsDis\n      )\n    };\n  }\n};\n\n</script>\n\n","import mod from \"-!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=421079f8&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=421079f8&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"421079f8\",\n  null\n  \n)\n\nexport default component.exports","export default {\n  experimentId: '29',\n  serverUrl: 'https://magpie-cogsciprag.fly.dev',\n  socketUrl: 'wss://magpie-cogsciprag.fly.dev/socket',// this will be used in prolific mode\n  completionUrl: 'https://...',\n  contactEmail: 'aidarostamiyg24@gmail.com',\n  // Either 'debug', 'directLink' or 'prolific'\n  mode: 'directLink',\n  language: 'en'\n};\n","import Vue from 'vue';\nimport VueKonva from 'vue-konva';\nimport VueMagpie from 'magpie-base';\nimport App from './App.vue';\nimport magpieConfig from './magpie.config.js';\n\nVue.config.productionTip = false;\n\n// Load Konva components\nVue.use(VueKonva, { prefix: 'Canvas' });\n\n// Load magpie components\nVue.use(VueMagpie, magpieConfig);\n\n// start app\nnew Vue({\n  render: (h) => h(App)\n}).$mount('#app');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + \"0d37b189\" + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"thesis-experiment:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/causal_selection/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkthesis_experiment\"] = self[\"webpackChunkthesis_experiment\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(3477); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","attrs","_v","scopedSlots","_u","key","fn","$magpie","measurements","response","staticClass","on","$event","nextScreen","proxy","_l","t","i","cardsImg","playImg","_s","statement","q1","q2","q3","q4","tag","$set","length","saveAndNextScreen","aliceImg","undefined","staticRenderFns","BASE_URL","Ex1TrialsConj","Ex1TrialsDis","Ex2TrialsConj","Ex2TrialsDis","name","data","condition","Math","random","Ex1TrialsShuffled","Ex2TrialsShuffled","component","experimentId","serverUrl","socketUrl","completionUrl","contactEmail","mode","language","config","productionTip","use","prefix","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","f","e","chunkId","Promise","all","reduce","promises","u","miniCssF","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","done","push","script","needAttach","scripts","document","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","forEach","setTimeout","bind","type","target","head","appendChild","Symbol","toStringTag","value","nmd","paths","children","p","installedChunks","installedChunkData","promise","resolve","reject","error","Error","loadingEnded","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}